diff --git a/src/main.ts b/src/main.ts
index 9534e28..0a8fde8 100644
--- a/src/main.ts
+++ b/src/main.ts
@@ -16,103 +16,83 @@
  */
 
 
-import {Location} from '@angular/common';
-import {HttpClientModule} from '@angular/common/http';
-import {importProvidersFrom} from '@angular/core';
-import {FormsModule} from '@angular/forms';
-import {MatButtonModule} from '@angular/material/button';
-import {MatFormFieldModule} from '@angular/material/form-field';
-import {MatInputModule} from '@angular/material/input';
-import {bootstrapApplication, BrowserModule} from '@angular/platform-browser';
-import {provideAnimations} from '@angular/platform-browser/animations';
+import {APP_INITIALIZER, importProvidersFrom} from '@angular/core';
+import {bootstrapApplication} from '@angular/platform-browser';
 
-import {AppRoutingModule} from './app/app-routing.module';
 import {AppComponent} from './app/app.component';
-import {CustomLogoComponent} from './app/components/custom-logo/custom-logo.component';
-import {EVAL_TAB_COMPONENT, EvalTabComponent} from './app/components/eval-tab/eval-tab.component';
-import {MarkdownComponent} from './app/components/markdown/markdown.component';
-import {MARKDOWN_COMPONENT} from './app/components/markdown/markdown.component.interface';
+import {routes} from './app/app-routing.module';
 import {AgentService} from './app/core/services/agent.service';
 import {ArtifactService} from './app/core/services/artifact.service';
-import {AudioPlayingService} from './app/core/services/audio-playing.service';
-import {AudioRecordingService} from './app/core/services/audio-recording.service';
 import {DownloadService} from './app/core/services/download.service';
 import {EvalService} from './app/core/services/eval.service';
 import {EventService} from './app/core/services/event.service';
 import {FeatureFlagService} from './app/core/services/feature-flag.service';
+import {FeedbackService} from './app/core/services/feedback.service';
 import {GraphService} from './app/core/services/graph.service';
 import {AGENT_SERVICE} from './app/core/services/interfaces/agent';
 import {ARTIFACT_SERVICE} from './app/core/services/interfaces/artifact';
-import {AUDIO_PLAYING_SERVICE} from './app/core/services/interfaces/audio-playing';
-import {AUDIO_RECORDING_SERVICE, AUDIO_WORKLET_MODULE_PATH} from './app/core/services/interfaces/audio-recording';
 import {DOWNLOAD_SERVICE} from './app/core/services/interfaces/download';
 import {EVAL_SERVICE} from './app/core/services/interfaces/eval';
 import {EVENT_SERVICE} from './app/core/services/interfaces/event';
 import {FEATURE_FLAG_SERVICE} from './app/core/services/interfaces/feature-flag';
+import {FEEDBACK_SERVICE} from './app/core/services/interfaces/feedback';
 import {GRAPH_SERVICE} from './app/core/services/interfaces/graph';
 import {LOCAL_FILE_SERVICE} from './app/core/services/interfaces/localfile';
-import {PENDING_EVENT_SERVICE} from './app/core/services/interfaces/pendingevent';
 import {SAFE_VALUES_SERVICE} from './app/core/services/interfaces/safevalues';
 import {SESSION_SERVICE} from './app/core/services/interfaces/session';
+import {LocalFileService} from './app/core/services/local-file.service';
+import {SafeValuesService} from './app/core/services/safevalues.service';
+import {SessionService} from './app/core/services/session.service';
+import {RuntimeConfigUtil} from './utils/runtime-config-util';
+import {provideRouter} from '@angular/router';
+import {HTTP_INTERCEPTORS, provideHttpClient, withInterceptorsFromDi} from '@angular/common/http';
+import {AuthInterceptor} from './app/core/interceptors/auth.interceptor';
+import {ErrorInterceptor} from './app/core/interceptors/error.interceptor';
+import {MatDialogModule} from '@angular/material/dialog';
+import {provideAnimations} from '@angular/platform-browser/animations';
 import {STREAM_CHAT_SERVICE} from './app/core/services/interfaces/stream-chat';
 import {STRING_TO_COLOR_SERVICE} from './app/core/services/interfaces/string-to-color';
 import {TRACE_SERVICE} from './app/core/services/interfaces/trace';
-import {VIDEO_SERVICE} from './app/core/services/interfaces/video';
-import {WEBSOCKET_SERVICE} from './app/core/services/interfaces/websocket';
-import {LocalFileServiceImpl} from './app/core/services/local-file.service';
-import {PendingEventServiceImpl} from './app/core/services/pending-event.service';
-import {SafeValuesServiceImpl} from './app/core/services/safevalues.service';
-import {SessionService} from './app/core/services/session.service';
-import {StreamChatService} from './app/core/services/stream-chat.service';
-import {StringToColorServiceImpl} from './app/core/services/string-to-color.service';
+import {LocationService} from './app/core/services/location.service';
+import {StreamChatServiceImpl} from './app/core/services/stream-chat.service';
+import {StringToColorService} from './app/core/services/string-to-color.service';
 import {TraceService} from './app/core/services/trace.service';
-import {VideoService} from './app/core/services/video.service';
-import {WebSocketService} from './app/core/services/websocket.service';
-import {LOGO_COMPONENT} from './app/injection_tokens';
-import {LOCATION_SERVICE} from './app/core/services/location.service';
-
-fetch('./assets/config/runtime-config.json')
-    .then((response) => response.json())
-    .then((config) => {
-      (window as any)['runtimeConfig'] = config;
+import {environment} from './environments/environment';
 
-      bootstrapApplication(AppComponent, {
-        providers: [
-          importProvidersFrom(
-              BrowserModule, FormsModule, HttpClientModule, AppRoutingModule,
-              MatInputModule, MatFormFieldModule, MatButtonModule),
-          {provide: SESSION_SERVICE, useClass: SessionService},
-          {provide: AGENT_SERVICE, useClass: AgentService},
-          {provide: WEBSOCKET_SERVICE, useClass: WebSocketService},
-          {
-            provide: AUDIO_WORKLET_MODULE_PATH,
-            useValue: './assets/audio-processor.js'
-          },
-          {provide: AUDIO_RECORDING_SERVICE, useClass: AudioRecordingService},
-          {provide: AUDIO_PLAYING_SERVICE, useClass: AudioPlayingService},
-          {provide: VIDEO_SERVICE, useClass: VideoService},
-          {provide: STREAM_CHAT_SERVICE, useClass: StreamChatService},
-          {provide: EVENT_SERVICE, useClass: EventService},
-          {provide: EVAL_SERVICE, useClass: EvalService},
-          {provide: ARTIFACT_SERVICE, useClass: ArtifactService},
-          {provide: DOWNLOAD_SERVICE, useClass: DownloadService},
-          {provide: TRACE_SERVICE, useClass: TraceService},
-          {provide: FEATURE_FLAG_SERVICE, useClass: FeatureFlagService},
-          {provide: GRAPH_SERVICE, useClass: GraphService},
-          {
-            provide: STRING_TO_COLOR_SERVICE,
-            useClass: StringToColorServiceImpl
-          },
-          {provide: SAFE_VALUES_SERVICE, useClass: SafeValuesServiceImpl},
-          {provide: LOCAL_FILE_SERVICE, useClass: LocalFileServiceImpl},
-          {provide: PENDING_EVENT_SERVICE, useClass: PendingEventServiceImpl},
-          {provide: MARKDOWN_COMPONENT, useValue: MarkdownComponent},
-          ...(config.logo ?
-                  [{provide: LOGO_COMPONENT, useValue: CustomLogoComponent}] :
-                  []),
-          {provide: EVAL_TAB_COMPONENT, useValue: EvalTabComponent},
-          provideAnimations(),
-          {provide: LOCATION_SERVICE, useClass: Location}
-        ]
-      }).catch((err) => console.error(err));
-    });
+bootstrapApplication(AppComponent, {
+  providers: [
+    provideRouter(routes),
+    provideHttpClient(withInterceptorsFromDi()),
+    provideAnimations(),
+    importProvidersFrom(MatDialogModule),
+    {
+      provide: APP_INITIALIZER,
+      useFactory: () => RuntimeConfigUtil.loadRuntimeConfig(),
+      multi: true,
+    },
+    {
+      provide: APP_INITIALIZER,
+      useFactory: (featureFlagService: FeatureFlagService) => () =>
+          featureFlagService.loadFeatureFlags(),
+      deps: [FEATURE_FLAG_SERVICE],
+      multi: true,
+    },
+    {provide: AGENT_SERVICE, useClass: AgentService},
+    {provide: ARTIFACT_SERVICE, useClass: ArtifactService},
+    {provide: DOWNLOAD_SERVICE, useClass: DownloadService},
+    {provide: EVENT_SERVICE, useClass: EventService},
+    {provide: EVAL_SERVICE, useClass: EvalService},
+    {provide: FEATURE_FLAG_SERVICE, useClass: FeatureFlagService},
+    {provide: FEEDBACK_SERVICE, useClass: FeedbackService},
+    {provide: GRAPH_SERVICE, useClass: GraphService},
+    {provide: LOCAL_FILE_SERVICE, useClass: LocalFileService},
+    {provide: LOCATION_SERVICE, useClass: LocationService},
+    {provide: SAFE_VALUES_SERVICE, useClass: SafeValuesService},
+    {provide: SESSION_SERVICE, useClass: SessionService},
+    {provide: STREAM_CHAT_SERVICE, useClass: StreamChatServiceImpl},
+    {provide: STRING_TO_COLOR_SERVICE, useClass: StringToColorService},
+    {provide: TRACE_SERVICE, useClass: TraceService},
+    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},
+    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},
+  ],
+});
